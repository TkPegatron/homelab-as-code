---
- name: "Prepare hosts to become cluter members"
  hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"
    - name: Networking
      block:
        - name: Networking | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Networking | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            block: |
              127.0.1.1   {{ inventory_hostname }}
    - name: Packages | Fedora
      when: ansible_facts['distribution'] == 'Fedora'
      block:
        - name: Packages | Install required packages
          ansible.builtin.dnf:
            name: "{{ fedora.packages | default([]) }}"
            state: present
            update_cache: true
        - name: Packages | Remove leaf packages
          ansible.builtin.dnf:
            autoremove: true
    - name: User Configuration
      block:
        - name: User Configuration | Add additional SSH public keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "{{ item }}"
          loop: "{{ public_ssh_keys | default([]) }}"
    - name: System Configuration (1)
      block:
        - name: System Configuration (1) | Disable firewalld | Fedora
          ansible.builtin.systemd:
            service: firewalld.service
            enabled: false
            masked: true
            state: stopped
          when: ansible_facts['distribution'] == 'Fedora'
        - name: System Configuration (1) | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true
    - name: System Configuration (2)
      notify: Reboot
      block:
        - name: System Configuration (2) | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: 0644
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Tune sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 512
        - name: System Configuration (2) | Disable swap | Fedora
          ansible.builtin.dnf:
            name: zram-generator-defaults
            state: absent
          when: ansible_facts['distribution'] == 'Fedora'
        - name: System Configuration (2) | Disable swap at runtime | Ubuntu
          ansible.builtin.command: swapoff -a
          when:
            - ansible_facts['distribution'] == 'Ubuntu'
            - ansible_swaptotal_mb > 0
        # ? Don't (vv srs)
        # - name: System Configuration (2) | Permissive SELinux | Fedora
        #   ansible.posix.selinux:
        #     state: permissive
        #     policy: targeted
        #   when: ansible_facts['distribution'] == 'Fedora'
    - name: System Configuration (3)
      when: k3s_control_node
      block:
        - name: System Configuration (3) | HA Proxy | Install software
          ansible.builtin.dnf:
            name: [keepalived, haproxy]
            state: present
        - name: System Configuration (3) | HA Proxy | Tune sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-haproxy.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_nonlocal_bind: 1
              net.ipv6.ip_nonlocal_bind: 1
        - name: System Configuration (3) | HA Proxy | Tune Selinux Bools
          ansible.builtin.shell: |
            if [[ "$(getsebool haproxy_connect_any | grep 'off$' -q; echo $?)" == 0 ]]; then
              #? if 'off', set bool
              setsebool -P haproxy_connect_any=1
              echo "changed"; exit
            fi
            echo "unchanged"; exit
          register: haproxy_sebool
          changed_when: haproxy_sebool.stdout == "changed"
        - name: System Configuration (3) | HA Proxy | Get control-plane nodes
          ansible.builtin.set_fact:
            kube_api_nodes: "{{ hostvars | dict2items | json_query(jmes_query_kube_api_nodes) }}"
          vars:
            jmes_query_kube_api_nodes: "[?value.group_names[?contains(@, 'master') == `true`]].[key,value]"
        # This probably isnt DRY enough
        - name: System configuration (3) | HA Proxy | Install configuration
          notify: Reboot
          ansible.builtin.template:
            src: "{{ item.key }}"
            dest: "{{ item.value }}"
            owner: root
            mode: 0644
          with_dict: "{{ ha_config_files }}"
          vars:
            ha_config_files:
              haproxy.cfg.j2: /etc/haproxy/haproxy.cfg
              keepalived.conf.j2: /etc/keepalived/keepalived.conf
        - name: System configuration (3) | HA Proxy | Enable services
          ansible.builtin.systemd:
            name: "{{ item }}"
            state: started
            enabled: true
          with_items: ['keepalived', 'haproxy']

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
