---
- name: "Prepare hosts to become cluter members"
  hosts: firewall
  become: true
  gather_facts: true
  any_errors_fatal: true
  vars:
    ansible_ssh_user: ansible
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"
    - name: System Configuration
      block:
        - name: System Configuration | Install EPEL Repo
          ansible.builtin.dnf:
            name: "epel-release"
            state: present
            update_cache: true
        - name: System Configuration | Install System Packages
          ansible.builtin.dnf:
            name: "{{ system_packages | default([]) }}"
            state: present
            update_cache: true
    - name: User Configuration
      block:
        - name: User Configuration | Create user account
          ansible.builtin.user:
            name: "{{ item.name }}"
            comment: "{{ item.comment | default(omit) }}"
            password: "{{ item.password }}"
            append: "{{ item.append | default(omit) }}"
            groups: "{{ item.groups | default('users') }}"
          loop: "{{ provision_users }}"
        - name: User Configuration | Allow user to sudo without password
          ansible.builtin.copy:
            content: "{{ item.name }} ALL=(ALL) NOPASSWD: ALL"
            dest: "/etc/sudoers.d/{{ item.name }}"
            mode: 0644
            owner: root
            group: root
          when: item.nopasswd == true
          loop: "{{ provision_users }}"
        - name: User Configuration | Add SSH public keys
          ansible.posix.authorized_key:
            user: "{{ item.name }}"
            key: "{{ item.public_ssh_keys }}"
          when: item.public_ssh_keys != ""
          loop: "{{ provision_users }}"
        - name: User Configuration | Install Dotfiles
          when: install_dotfiles != ""
          block:
            - name: Ensure Dependencies are Available
              ansible.builtin.dnf:
                name: "{{ dotfiles_prereqs }}"
                state: present
              #loop: "{{ provision_users }}"
            - name: Clone repository into $HOME
              loop: "{{ provision_users }}"
              become_user: "{{ item.name }}"
              ansible.builtin.git:
                repo: "{{ install_dotfiles }}"
                dest: "/home/{{ item.name }}/.dotfiles"
            - name: Execute Installation Script
              loop: "{{ provision_users }}"
              become_user: "{{ item.name }}"
              ansible.builtin.shell: "./install.sh"
              args:
                chdir: "/home/{{ item.name }}/.dotfiles"
