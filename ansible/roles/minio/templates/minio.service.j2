{{ ansible_managed | comment }}

[Unit]
Description=Minio
Documentation=https://min.io/docs/minio/linux/index.html
Wants=network-online.target
After=network-online.target
AssertFileIsExecutable={{ minio_server_bin }}

# Avoid noisy crashloops
StartLimitIntervalSec=60
StartLimitBurst=5

[Service]
WorkingDirectory=/usr/local/

User={{ minio_user }}
Group={{ minio_group }}
ProtectProc=invisible

EnvironmentFile={{ minio_server_envfile }}
ExecStartPre=/bin/bash -c "if [ -z \"${MINIO_VOLUMES}\" ]; then echo \"Variable MINIO_VOLUMES not set in {{ minio_server_envfile }}\"; exit 1; fi"

ExecStart={{ minio_server_bin }} server $MINIO_OPTS $MINIO_VOLUMES

# Let systemd always restart this service, in limits defined by StartLimitIntervalSec and StartLimitBurst.
Restart=always

StandardOutput=journal
StandardError=inherit

# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65536

# Disable timeout logic and wait until process is stopped
TimeoutStopSec=0

# SIGTERM signal is used to stop Minio
KillSignal=SIGTERM
SendSIGKILL=no

# Specifies the maximum number of threads this process can create
TasksMax=infinity

{% if (minio_server_addr.split(':')[-1] | int) < 1024 %}
AmbientCapabilities=CAP_NET_BIND_SERVICE
{% endif %}

[Install]
WantedBy=multi-user.target
