#!/usr/sbin/nft
flush ruleset

define nic_wan = {{ nftables_nic_wan }}
define nic_lan = {{ nftables_nic_lan }}
define nic_man = {{ nftables_nic_man }}

table inet primary {

    chain log-accept {
        # -{Log packets sent to this chain and accept}
        log prefix "nftables.inet.input.accept " # syslog
        log group 1 # ulog
        ct state new counter accept
    }

    chain log-reject {
        # -{Log packets sent to this chain and reject}
        log prefix "nftables.inet.input.reject " # syslog
        log group 2 # ulog
        ct state new counter reject with icmpx type admin-prohibited
    }

    chain input_dispatch {
        type filter hook input priority 0; policy drop;

        iiftype loopback accept comment "Accept any loopback traffic"

        ct state vmap {
            new: continue, invalid: drop,
            established: accept, related: accept
        } comment "Accept established and related connections"

        # -{Wireguard traffic}
        udp dport 51820 accept

        # -{Dispatch packets to zones by interface}
        meta iifname {$nic_man, $nic_lan} jump input_trusted_zone
        meta iifname $nic_man jump input_man_zone
        meta iifname $nic_wan jump input_wan_zone

        # -{Rate-Limited ICMP on WAN interface}
        meta iifname $nic_wan meta l4proto { icmp, ipv6-icmp } limit rate over 2/second drop

        # -{Final Verdict of incoming connections}
        jump log-reject
    }

    chain input_trusted_zone {
        # -{Allow all ICMP communications}
        meta l4proto { icmp, ipv6-icmp } accept
        # -{Allow connections to services running on the local system}
        tcp dport 22 jump log-accept comment "Secure Shell"
        udp dport {67,68} accept comment "DHCP"
        # -{Accept multicast DNS and LLMNR}
        udp dport mdns ip6 daddr ff02::fb accept comment "Accept mDNS"
        udp dport mdns ip daddr 224.0.0.251 accept comment "Accept mDNS"
        meta l4proto { udp, tcp } th dport llmnr accept comment "Accept llmnr"
        return
    }

    chain input_wan_zone {
        # -{Rate limit icmp echo-requests}
        ip protocol icmp icmp type echo-request limit rate over 1/minute burst 4 packets drop
        ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate over 1/minute burst 4 packets drop
        # -{Allow neighbor discovery}
        ip6 nexthdr icmpv6 icmpv6 type {
            nd-neighbor-solicit,nd-neighbor-advert,nd-router-solicit,
            nd-router-advert,mld-listener-query,destination-unreachable,
            packet-too-big,time-exceeded,parameter-problem
        } accept
        # -{Accept and rate-limit ssh connections}
        #tcp dport 22 ct state new limit rate 5/minute jump log-accept
        return
    }

    chain input_man_zone {
        # -{Allow Routing Protocols}
        tcp dport 179 jump log-accept comment "BGP"
        # -{Allow NBDE client connections}
        tcp dport 6830 jump log-accept
        # -{Allow Prometheus Node Exporter}
        tcp dport 9100 jump log-accept
        return
    }

    chain forward_dispatch {
        type filter hook forward priority 0; policy drop;
        # -{Contrack Verdict Map}
        ct state vmap {
            new: continue, invalid: drop,
            established: accept, related: accept
        } comment "Accept established and related connections"
        # -{Packet Forwarding Verdict Map}
        meta iifname . meta oifname {
            $nic_man . $nic_wan, # MAN -> WAN; allow
            $nic_lan . $nic_wan, # LAN -> WAN; allow
            $nic_man . $nic_lan, # MAN -> LAN; allow
            $nic_lan . $nic_man  # LAN -> MAN; allow
        } accept
    }

    chain prerouting_dispatch {
        type nat hook prerouting priority -100;
        # -{ Force internal nameserver usage }
        #iifname { $nic_man } meta l4proto { tcp, udp } th dport 53 dnat to 172.22.0.1
        #iifname { $nic_lan } meta l4proto { tcp, udp } th dport 53 dnat to 172.22.1.1
    }

    chain postrouting_dispatch {
        type nat hook postrouting priority srcnat;
        # -{ Port Address Translation for IPv4}
        oifname $nic_wan counter masquerade comment "Outbound Overload PAT"
        # -{Hairpin LAN -> MAN, this shouldnt be in use}
        iifname $nic_lan oifname $nic_man counter masquerade
    }
}

table inet suricata {
    # -{Support table for suricata IPS}
    chain ips-filter-input {
        type filter hook input priority -10;
        iifname $nic_wan queue bypass
    }
    chain ips-filter-forward {
        type filter hook forward priority -10;
        iifname $nic_wan queue bypass
    }
}
